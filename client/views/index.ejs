<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Supermercado+One|Electrolize|Roboto+Mono:400,500' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Architects+Daughter' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Indie+Flower' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Lato|Oxygen' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Handlee' rel='stylesheet' type='text/css'>

    <link rel="stylesheet" type="text/css" href="./views/UberBootstrap.css">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>NeighUBERly</title>
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

  <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">


<!-- Latest compiled and minified JavaScript -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  
  <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyDNO6mBsSn03jTgWSwHulQT6X1YO0UMSeY&amp&sensor=false&callback=initializeMap&libraries=places"></script>
    <script src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/main.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/common.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/util.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/marker.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/map.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/onion.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/geocoder.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/controls.js"></script>
    <script type="text/javascript" charset="UTF-8" src="http://maps.gstatic.com/maps-api-v3/api/js/20/11a/stats.js"></script>
</head>
<body>
<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://www.uber.com">
        <img id="uber_logo"src="./views/Uber_logo.jpg">
        <p>Powered by UBER</p>
      </a>

    </div>

    <div id='logoOurName'>
        <span class="OurName">Neigh</span>
        <span>UBER</span>
        <span class='OurName'>ly</span>
        <span>.com</span>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav navbar-right">
        <!-- <li><a href="#">Customer</a></li> -->
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Options <span class="caret"></span></a>
          <ul class="dropdown-menu" role="menu">
            <li><a href="/user">Influence Profile</a></li>
            <li class="divider"></li>
            <li><a href="/logout">Logout</a></li>
          </ul>
        </li>
      </ul>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
<div id="body">

  <div id='availableBusinesses'>
    <p id="location">Hang Tight! Getting Current Location...<p>
  </div>

  <div id="googleMap" style="width:60%;height:26em;"></div>

<div class="container">
  <div class="scroller scroller-left"><i class="glyphicon glyphicon-chevron-left"></i></div>
  <div class="scroller scroller-right"><i class="glyphicon glyphicon-chevron-right"></i></div>
  <div class="wrapper">
    <ul class="nav nav-tabs list" id="myTab">

<!--  
    <li><a href="#">Electrical</a></li>
    <li><a href="#">Computer Services</a></li> -->

  </ul>
  </div>
</div>

<div id="button">
  <button id="requestButton">Request Service</button>
</div>

<footer class="footer-distributed">
  <div class="footer-left">
    <p class="Name">Neigh<span>UBER</span>ly<span>.com</span></p>
    <p class="footer-links">
      <a href="#">Home</a>
      路
      <a href="#">Blog</a>
      路
      <a href="#">About</a>
      路
      <a href="#">Faq</a>
      路
      <a href="#">Contact</a>
    </p>
    <p class="footer-company-name">Super Awesome &copy; 2015</p>
  </div>
  <div class="footer-center">
    <div>
      <i class="fa fa-envelope"></i>
      <p><a href="mailto:srslafazan@gmail.com">HireUs@Uber.com</a></p>
    </div>
    <div>
   
    <ul><p class='apiResources'>Uber API ResourcesImplemented:</p>
      <li class='apiResources'>GET /v1/products</li>
      <li class='apiResources'>GET /v1/estimates/time</li>
      <li class='apiResources'>GET /v1.2/history</li>
      <li class='apiResources'>GET /v1/me</li>
      <li class='apiResources'>POST /v1/requests</li>
    </ul>
    </div>
  </div>
  <div class="footer-right">
    <p class="footer-company-about">
      <span>Meet the Creators</span>
      <p class='mainLink'><a href="http://www.linkedin.com/in/charles139">> Charles</a></p>
      <p class='mainLink'><a href="http://www.linkedin.com/in/pub/jae-hong/73/a43/b93">> Jae</a></p>
      <p class='mainLink'><a href="http://www.linkedin.com/in/johnech">> John</a></p>
      <p class='mainLink'><a href="http://www.linkedin.com/in/nizarkassis">> Nizar</a></p>
      <p class='mainLink'><a href="http://www.linkedin.com/in/shainlafazan">> Shain</a></p>
    </p>
  </div>
</footer>
 <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
   <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  
  <script type="text/javascript">var hidWidth;
var scrollBarWidths = 40;

var widthOfList = function(){
  var itemsWidth = 0;
  $('.list li').each(function(){
    var itemWidth = $(this).outerWidth();
    itemsWidth+=itemWidth;
  });
  return itemsWidth;
};

var widthOfHidden = function(){
  return (($('.wrapper').outerWidth())-widthOfList()-getLeftPosi())-scrollBarWidths;
};

var getLeftPosi = function(){
  return $('.list').position().left;
};

var reAdjust = function(){
  if (($('.wrapper').outerWidth()) < widthOfList()) {
    $('.scroller-right').show();
  }
  else {
    $('.scroller-right').hide();
  }
  
  if (getLeftPosi()<0) {
    $('.scroller-left').show();
  }
  else {
    $('.item').animate({left:"-="+getLeftPosi()+"px"},'slow');
    $('.scroller-left').hide();
  }
}

reAdjust();

$(window).on('resize',function(e){  
    reAdjust();
});

$('.scroller-right').click(function() {
  
  $('.scroller-left').fadeIn('slow');
  $('.scroller-right').fadeOut('slow');
  
  $('.list').animate({left:"+="+widthOfHidden()+"px"},'slow',function(){

  });
});

$('.scroller-left').click(function() {
  
  $('.scroller-right').fadeIn('slow');
  $('.scroller-left').fadeOut('slow');
  
    $('.list').animate({left:"-="+getLeftPosi()+"px"},'slow',function(){
    
    });
});    
</script>


  <script>
    var latitude = 37;
    var longitude = 122;

    $(document).ready(function() {
      var locationPar = document.getElementById("location");
      var ServerID = "KUHT_dj74fNfYWj79ds9U0pYZBWhz3f-rQtHEMha";
      var clientID = '-Xd36A-w_Z1XeOEAvxApvPFqSGMJ8V_a';
      var clientSecret = 'a9DoqbFM1lDuqaENFuKIJG_r9DB-LbgLuce7WRkp';

      var products;
      var availableBusinesses = [];

      $(document).on('submit', '#requestForm', function (){
        if (!$('#currentService').val()){
          event.preventDefault();
          alert('Please select a business!');
        }
      });

      // check if the browser supports geolocation and if it does run the position callback defined below else tell the user
      if(navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(positionCallback);
      } else {
        locationPar.innerHTML = "Geolocation not supported on this browser. Using Latitude: <strong> 37 </strong>, Longitude: <strong> 122 </strong>";
      }
      // this is the callback that runs as soon as the browser gets the geolocation
      function positionCallback(position) {
        latitude = position.coords.latitude.toFixed(5);
        longitude = position.coords.longitude.toFixed(5);
        // locationPar.innerHTML = "Latitude: <strong>" + latitude + "</strong>, Longitude: <strong>" + longitude + "</strong>";
        locationPar.innerHTML = 'Thanks for waiting :) Select a category to find the nearest local business that suits your need.';

        $.ajax({
          url: "https://sandbox-api.uber.com/v1/products", 
          method: "GET",
          headers: { "Authorization": "Token " + ServerID },
          data: { "latitude": latitude, "longitude": longitude },
          success: function(data) { 
          	// load myTab
          	
          	products = data.products;

            (function any_function_name(){
                var maps            = [];
                var scales          = 4;
                var ip_markers      = [];
                var browser_markers = [];
                var browserSays     = { latitude:null, longitude:null };
                var geocoder;

                function decimalToDMS(decimal) {
                    //decimal must be integer or float no larger than 180;
                    //type must be Boolean
                    if(!$.isNumeric(decimal) || Math.abs(decimal) > 180) {
                        return decimal;
                    }

                    //get degrees
                    var degrees = Math.floor(decimal);

                    //get seconds
                    var seconds = (Math.abs(decimal) - Math.abs(degrees)) * 3600.0;

                    //get minutes
                    var minutes = Math.floor(Math.abs(seconds) / 60.0);

                    //reset seconds
                    seconds = Math.round((Math.abs(seconds) - (minutes * 60.0))*100.0)/100.0;

                    return degrees + '&#176; ' + minutes + "' " + seconds + '"';
                }

                function latitudeToDMSD(decimal) {
                    var dms = decimalToDMS(decimal);
                    return (dms.substring(0,1) == '-' ? dms.substring(1) + ' S' : dms + ' N');
                }

                function longitudeToDMSD(decimal) {
                    var dms = decimalToDMS(decimal);
                    return (dms.substring(0,1) == '-' ? dms.substring(1) + ' W' : dms + ' E');
                }

                function lookupLocation() {
                    geocoder = new google.maps.Geocoder();
                    geocoder.geocode(
                        {'latLng':new google.maps.LatLng(browserSays.latitude,browserSays.longitude)},
                        recordLocation
                    );
                }

                function browserSet() {
                    return
                            browserSays.formatted_address != null
                        &&  browserSays.country != null
                        &&  browserSays.country_code != null
                        &&  browserSays.region != null
                        &&  browserSays.region_code != null
                        &&  browserSays.city != null
                        &&  browserSays.zipcode != null;
                }

                function recordLocation(results,status) {
                    if(status == google.maps.GeocoderStatus.OK) 
                    {
                        var a = 0;
                        var b = 0;
                        var c = 0;
                        for(a = 0; a < results.length; a++) {
                            if(a == 0) browserSays.formatted_address = results[a].formatted_address;
                            for(b = 0; b < results[a].address_components.length; b++) {
                                for(c = 0; c < results[a].address_components[b].types.length; c++) {
                                    if(results[a].address_components[b].types[c] == 'country') {
                                        browserSays.country = results[a].address_components[b].long_name;
                                        browserSays.country_code = results[a].address_components[b].short_name;
                                    } else if(results[a].address_components[b].types[c] == 'administrative_area_level_1') {
                                        browserSays.region = results[a].address_components[b].long_name;
                                        browserSays.region_code = results[a].address_components[b].short_name;
                                    } else if(results[a].address_components[b].types[c] == 'locality') {
                                        browserSays.city = results[a].address_components[b].long_name;
                                    } else if(results[a].address_components[b].types[c] == 'postal_code') {
                                        browserSays.zipcode = results[a].address_components[b].long_name;
                                    }
                                    if(browserSet() == true) break;
                                }
                                if(browserSet() == true) break;
                            }
                            if(browserSet() == true) break;
                        }
                    }
                }

                function positionFromBrowser(position) {
                    var d = new Date(position.timestamp);
                    if(d.toString('yyyy') > (new Date()).getFullYear()) {
                        d = new Date(position.timestamp / 1000);
                    }
                    browserSays.latitude = position.coords.latitude;
                    browserSays.longitude = position.coords.longitude;
                    lookupLocation();
                    
                    $("h2.coordinates").html(position.coords.latitude + ', ' + position.coords.longitude);
                }

                navigator.geolocation.getCurrentPosition(positionFromBrowser);
                
            })();

     	$('#myTab').html('');

          	for ( var i in products ){
          		var product = products[i];
          		var value = convertProduct(product);

          		$('#myTab').append('<li><a id="' + product.product_id + '" class="categoryButton" data=' + value + '>' + value + '</a></li>');
          	}	
            $('#myTab').append('<li><a id="0" class="categoryButton" data="Automotive">Automotive</a></li>');
            $('#myTab').append('<li><a id="1" class="categoryButton" data="Electrical">Electrical</a></li>');
            $('#myTab').append('<li><a id="1" class="categoryButton" data="Computer Services">Computer Services</a></li>');

          	// load map

          		// post for request id: /v1/requests
          	// 	$.ajax({
          	// 		url: 'https://sandbox-api.uber.com/v1/requests',
          	// 	})

          	// 	//  get for request - map 
          	// $.ajax({
          	// 	url: 'https://sandbox-api.uber.com/v1/requests/{request_id}/map',
          	// 	method: "GET",
          	// })
            reAdjust();
          }
      	});

        $("#categoryButton").prop("disabled", false);
    }

      // get products

    function convertProduct(product){
      	var value;
      	switch(product.display_name){
  			case 'uberX': value = 'Landscaping';
  			break;
  			case 'uberXL': value = 'Hairstyling';
  			break;
  			case 'UberBLACK': value = 'Plumbing';
  			break;
  			case 'UberSUV': value = 'Locksmithing';
  			break;
  			case 'Landscaping': value = 'uberX';
  			break;
  			case 'Hairstyling': value = 'uberXL';
  			break;
  			case 'Plumbing': value = 'UberBLACK';
  			break;
  			case 'Locksmithing': value = 'UberSUV';
        break;
        case 0: value = 'Automotive';
        break;
        case 1: value = 'Electrical';
        break;
        default: value = 'Chimney Sweeps';
        break;
  		}
  		return value;
    }

    function categoryToBusiness(category){
      var value;
      switch(category){
        case 'Landscaping': value = "Ripley's Leaf it or Not";
        break;
        case 'Hairstyling': value = 'Edwards Hair Stylers';
        break;
        case 'Plumbing': value = "Caeser's Plumbers";
        break;
        case 'Locksmithing': value = 'Titanium Locksmiths';
        break;
        case 'Automotive': value = 'Redline Automechanics';
        break;
        case 'Electrical': value = 'Maximum Charge';
        break;
        default: value = 'Oliver Twist\'s Chimney Sweeps';
        break;
      }
      return value;
    }

      // get categoryButton
      $(document).on('click', '.categoryButton', function() {
        // ajax call using the jquery $.ajax method YOU MUST PUT YOUR OWN SERVER_AUTH TOKEN FOR THIS TO WORK
        var userCategoryRequest = $(this).attr('data');
        var bizName = categoryToBusiness(userCategoryRequest);
        
        $('#businessName').val(bizName);
        $('#currentService').val($(this).attr('id'));

        $('#availableBusinesses').html('');
        availableBusinesses = [];
        
        $.ajax({
          url: "https://sandbox-api.uber.com/v1/estimates/time", 
          method: "GET",
          headers: { "Authorization": "Token " + ServerID },
          data: { 	"start_latitude": latitude, 
          			"start_longitude": longitude, 
          			"product_id": $(this).attr('data'),
          		},
          success: function(data) { 
          	console.log('Below are the available products nearby: ');
            console.log(data);
            console.log('\n');

            console.log('here is the data:');
            console.log(data.times);
            for ( var i = 0; i < data.times.length; i++ ){
            	var business = data.times[i];

            	if ( convertProduct(business) == userCategoryRequest){
            		availableBusinesses.push(business);
            	}
            }
            console.log('> availableBusinesses: ')
            console.log(availableBusinesses);
            
            for ( var j in availableBusinesses ){
            	var businessName = convertProduct(availableBusinesses[j]);
            	var eta = parseInt(availableBusinesses[j].estimate / 60);
         	   $('#availableBusinesses').html('<p>Closest matching business:\n <span class="businessName">' + bizName + '</span>, estimated time to arrival: <span class="eta">' + eta.toString() + ' min</span>.<p>');
        	}

        	// update map
            var productId;
            $.ajax({
              url: "https://sandbox-api.uber.com/v1/requests", 
              method: "POST",
              headers: { "Authorization": "Token " + ServerID,
              },
              data: {   
                "product_id": $(this).attr('data'),
                "start_latitude": latitude, 
                "start_longitude": longitude, 
                "end_latitude": latitude, 
                "end_longitude": longitude, 
              },
              success: function(data) { 
                console.log('display biz with uber request');
                console.log(data);
              }
            });
          
            $.post('/request', 
                {   
                "product_id": $(this).attr('data'),
                "start_latitude": latitude, 
                "start_longitude": longitude, 
                "end_latitude": latitude, 
                "end_longitude": longitude, 
              }
              , function (data){

            });

          }
        });
      });



    });

      //@@@@@@@@@@@@@@@@@@@@@@@@
      // If you're adding a number of markers, you may want to drop them on the map
// consecutively rather than all at once. This example shows how to use
// window.setTimeout() to space your markers' animation.

      var SanJose = new google.maps.LatLng(37.37725,-121.91233);;

      var neighborhoods = [
        new google.maps.LatLng(37.37800,-121.91133),
        new google.maps.LatLng(37.37825,-121.91333),
        new google.maps.LatLng(37.37625,-121.91533),
        new google.maps.LatLng(37.37825,-121.91033)
      ];
      var icons = [
      './views/lawnmower.png',
      './views/hairdryer.png',
      './views/plunger.png',
      './views/lock.png',
      ];

      var markers = [];
      var map;

      function initialize() 
      {
        var mapOptions = {
          zoom: 17,
          center: SanJose,
          mapTypeId: google.maps.MapTypeId.ROADMAP //or SATELLITE or HYBRID or TERRAIN or ROADMAP
        };

        map = new google.maps.Map(document.getElementById('googleMap'), mapOptions);
        marker = new google.maps.Marker({
          map:map,
          icon: './views/pindrop.png',
          draggable:true,
          animation: google.maps.Animation.DROP,
          position: SanJose
        });
      }

      function dropLawnMower() {
        clearMarkers();
        for (var i = 0; i < neighborhoods.length; i++) {
          addMarkerWithTimeout(neighborhoods[i], i * 300);
        }
      }
      function dropHairDryer() {
        clearMarkers();
        for (var i = 0; i < neighborhoods.length; i++) {
          addMarkerWithTimeoutH(neighborhoods[i], i * 300);
        }
      }

      function dropPlunger() {
        clearMarkers();
        for (var i = 0; i < neighborhoods.length; i++) {
          addMarkerWithTimeoutP(neighborhoods[i], i * 300);
        }
      }

      function dropLock() {
        clearMarkers();
        for (var i = 0; i < neighborhoods.length; i++) {
          addMarkerWithTimeoutL(neighborhoods[i], i * 300);
        }
      }

      function addMarkerWithTimeout(position, timeout) {
        window.setTimeout(function() {
          markers.push(new google.maps.Marker({
            position: position,
            icon: icons[0],
            map: map,
            animation: google.maps.Animation.DROP,
            draggable: true
          }));
        }, timeout);
      }

      function addMarkerWithTimeoutH(position, timeout) {
        window.setTimeout(function() {
          markers.push(new google.maps.Marker({
            position: position,
            icon: icons[1],
            map: map,
            animation: google.maps.Animation.DROP,
            draggable: true
          }));
        }, timeout);
      }

      function addMarkerWithTimeoutP(position, timeout) {
        window.setTimeout(function() {
          markers.push(new google.maps.Marker({
            position: position,
            icon: icons[2],
            map: map,
            animation: google.maps.Animation.DROP,
            draggable: true
          }));
        }, timeout);
      }

      function addMarkerWithTimeoutL(position, timeout) {
        window.setTimeout(function() {
          markers.push(new google.maps.Marker({
            position: position,
            icon: icons[3],
            map: map,
            animation: google.maps.Animation.DROP,
            draggable: true
          }));
        }, timeout);
      }

      function clearMarkers() {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(null);
        }
        markers = [];
      }

google.maps.event.addDomListener(window, 'load', initialize);

      
      $('document').ready(function(){
          $(document).on('click' , '#a1111c8c-c720-46c3-8534-2fcdd730040d', dropLawnMower);
      });
      $('document').ready(function(){
          $(document).on('click' , '#821415d8-3bd5-4e27-9604-194e4359a449', dropHairDryer);
      });
      $('document').ready(function(){
          $(document).on('click' , '#23a231fd-9fa8-45a7-b212-e3f9cb69873f', dropPlunger);
      });
      $('document').ready(function(){
          $(document).on('click' , '#c9b74e41-816c-4df8-8290-41fc1df9476c', dropLock);
      });

      //@@@@@@@@@@@@@@@@@@@@@@@@
</script><!-- //GOOGLE MAP SCRIPT -->

<script type="text/javascript">

    var requestButton = document.getElementById("requestButton");

    if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showPosition);
    } else {
    var toSet = "";
    toSet = "Geolocation not supported input your own starting and ending coordinates below";
    toSet += "<form action='/request' method='POST'>";
    toSet += "Starting Latitude:<input type='text' name='start_latitude'>";
    toSet += "Starting Longitude:<input type='text' name='start_longitude'>";
    toSet += "Ending Latitude:<input type='text' name='end_latitude'>";
    toSet += "Ending Longitude:<input type='text' name='end_longitude'>";
    toSet += "</form>";
    requestButton.innerHTML = toSet;
    }

    function showPosition(position) {
    var toSet = "";
    toSet += "<form id='requestForm' action='/request' method='POST'>";
    toSet += "<input id='currentService' type='hidden' name='currentService' value=''>";
    toSet += "<input id='businessName' type='hidden' name='businessName' value=''>";
    toSet += "<input type='hidden' name='start_latitude' value='" + position.coords.latitude.toFixed(5) + "'>";
    toSet += "<input type='hidden' name='start_longitude' value='" + position.coords.longitude.toFixed(5) + "'>";
    toSet += "<input type='submit' value='Request Services'>"
    toSet += "</form>";
    requestButton.innerHTML = toSet;
    }

</script>
  

</body>
</html>
